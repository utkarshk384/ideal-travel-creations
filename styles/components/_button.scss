//Styles for a button component
/// @access public
/// @param {Number} $width - Any css unit that is used on width proeprty
/// @param {Hex, rgba, hsl} $bg-color - Any css unit that is used on bg-color property
/// @param {Number} $roundness - Any css unit that is usde on a border-radius property
@mixin Button-basic($width, $bg-color, $roundness: 0) {
  width: calc(#{$width} * 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: $bg-color;
  border-radius: $roundness;
  padding: calc(#{$width} * 0.075) calc(#{$width} * 0.025);

  //Responsiveness
  @include media(">=md") {
    width: $width;
  }
}

//Button styles with animations for icon
/// @access public
/// @param {Number} $width - Any css unit that is used on width proeprty
/// @param {Hex, rgba, hsl} $bg-color - Any css unit that is used on bg-color property
/// @param {Number} $roundness - Any css unit that is usde on a border-radius property
/// @param {String} $icon - Hover effect Icon
/// @param {String} $icon-family - font family of the icon
/// @param {String} $icon-family - color of the icon
@mixin Button-anim-icon(
  $width,
  $bg-color,
  $roundness: 0,
  $icon,
  $icon-family,
  $icon-color: inherit
) {
  @include Button-basic(#{$width}, #{$bg-color}, #{$roundness});
  position: relative;
  transition: padding 0.2s linear 0s;

  &::before {
    content: "";
    @include setPosition(0, 0, auto, 0);
    transition: all 0.2s linear 0s;
    display: block;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.2);
    transform: scale(0, 1);
    transform-origin: right top;
  }

  &::after {
    content: $icon;
    opacity: 0;
    height: 100%;
    position: absolute;
    right: 0;
    display: flex;
    align-items: center;
    font-family: $icon-family;
    color: $icon-color;
    transition: all 0.2s linear 0s;
    justify-content: center;

    //Responsiveness
    @include media(">=md") {
      right: 0rem;
    }
  }

  &:hover {
    padding-left: calc(#{$width} * -0.05);
    padding-right: calc(#{$width} * 0.05);

    //Responsiveness
    @include media(">=md") {
      padding-left: calc(#{$width} * -0.1);
      padding-right: calc(#{$width} * 0.1);
    }

    &::before {
      transform: scale(1, 1);
      transform-origin: right center;
    }

    &::after {
      right: calc(#{$width} * 0.05);
      opacity: 1;

      //Responsiveness
      @include media(">=md") {
        right: calc(#{$width} * 0.15);
      }
    }
  }
}
